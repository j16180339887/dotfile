#!/bin/bash

DOWNLOADARGS='-c -s16 -k1M -x16'
DNS=""

if ping -c 1 -W 1 180.76.76.76 2>/dev/null | grep -q -i "ttl"; then
  DNS="--async-dns-server=180.76.76.76"
fi

if ping -c 1 -W 2 8.8.8.8 2>/dev/null | grep -q -i "ttl"; then
  DNS="--async-dns-server=8.8.8.8"
fi

# macOS
if [[ "$OSTYPE" == "darwin"* ]] && echo "$@" | grep -q "upgrade\|install"; then
  [ "`whoami`" = root ] && echo "Don't use sudo." && exit 1

  cd ~/Library/Caches/Homebrew/downloads
  baseurl=$([ ${HOMEBREW_BOTTLE_DOMAIN} ] && echo "${HOMEBREW_BOTTLE_DOMAIN}" || echo "https://homebrew.bintray.com")

  # Download unfinished jobs
  [ $(command -v aria2c) ] || brew install aria2
  [ -f apt-fast.list ] && aria2c $DOWNLOADARGS $DNS -i apt-fast.list

  # Create new jobs
  packages=($(echo " ${@:2} " | perl -C -Mutf8 -pe "s/ -[a-zA-Z-]\+//g")$(brew outdated --quiet))

  for package in "${packages[@]}"
  do
    echo "Fetching $package"

    alldeps=$(echo -e "${package}\n$(brew deps $package)")

    while read -r dep; do
      filename=$(echo "$dep" | perl -C -Mutf8 -pe "s/.*--//")
      echo "$baseurl/bottles/$filename" | tee -a apt-fast.list
      echo " out=$(echo "$dep" | perl -C -Mutf8 -pe "s/.*\///")" | tee -a apt-fast.list
    done <<< "$(brew --cache $(echo \\"${alldeps}\\"))"
  done

  [ -f apt-fast.list ] && aria2c $DOWNLOADARGS $DNS -i apt-fast.list

  echo "brew $@"
  brew $@ && rm -f ~/Library/Caches/Homebrew/downloads/apt-fast.list && exit 0

  exit 1
fi

[ "$OSTYPE" = "linux-gnu" ] && [ "`whoami`" = root ] || exec sudo "$0" "$@"

# Ubuntu/Debian
if echo "$@" | grep -q "upgrade\|install\|dist-upgrade\|full-upgrade\|build-dep"; then
  APT=$([ $(command -v apt) ] && echo "apt" || echo "apt-get")
  cd /var/cache/apt/archives/

  # Download unfinished jobs
  [ $(command -v aria2c) ] || $APT install -y aria2
  [ -f apt-fast.list ] && aria2c $DOWNLOADARGS $DNS -i apt-fast.list

  # Create new jobs
  $APT -y --print-uris $@ | grep -E -o -e "(ht|f)tp[s]?://[^\']+" | tee apt-fast.list && aria2c -c $DOWNLOADARGS $DNS -i apt-fast.list && rm -f apt-fast.list

  echo $APT $@
  $APT $@ && rm -f /var/cache/apt/archives/apt-fast.list

# Ubuntu/Debian
elif echo "$@" | grep -q "update"; then
  APT=$([ $(command -v apt) ] && echo "apt" || echo "apt-get")
  $APT -o 'Acquire::Queue-mode=access; APT::Acquire=Retries 3;' update

# Archlinux
elif echo "$@" | grep -q "\-S"; then
  cd /var/cache/pacman/pkg/

  # Download unfinished jobs
  [ $(command -v aria2c) ] || pacman -S --noconfirm --needed aria2
  [ -f apt-fast.list ] && aria2c $DOWNLOADARGS $DNS -i apt-fast.list

  # Create new jobs
  pacman -Syup --print-format "%l" | grep -E -o -e "(ht|f)tp[s]?://[^\']+" | tee apt-fast.list
  pacman $@ --print --print-format "%l" | grep -E -o -e "(ht|f)tp[s]?://[^\']+" | tee -a apt-fast.list && aria2c -c $DOWNLOADARGS $DNS -i apt-fast.list

  echo "pacman $@"
  pacman $@ && rm -f /var/cache/pacman/pkg/apt-fast.list
fi
